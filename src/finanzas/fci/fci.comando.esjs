importar { format, subDays, addDays, isBefore as esAntes } desde 'date-fns'
importar { guardarCacfi } desde '@/finanzas/fci/guardarCacfi.esjs'
importar { escribirRuta } desde '@/utils/rutas.esjs'
importar { extraerCacfi } desde '@/extractores/cacfi.extractor.esjs'

exportar porDefecto asincrono funcion () {
  const series = [
    'mercadoDinero',
    'rentaVariable',
    'rentaFija',
    'rentaMixta',
  ]

  const promesas = Promesa.todos(series.mapear((serie) => ejecutarSerie(serie)))

  esperar promesas
}

asincrono funcion ejecutarSerie(serie) {
  const inicio = subDays(crear Fecha(), 7)
  const fin = addDays(crear Fecha(), 1)
  var fecha = inicio

  var penultimo = nulo
  var ultimo = nulo

  mientras (esAntes(fecha, fin)) {
    const items = esperar extraerCacfi(serie, format(fecha, 'yyyy-MM-dd'))

    guardarCacfi(serie, items, fecha)

    fecha = addDays(fecha, 1)

    si (items.longitud > 0) {
      penultimo = ultimo
      ultimo = items
    }
  }

  esperar escribirRuta(`/finanzas/fci/${serie}/penultimo`, penultimo)

  esperar escribirRuta(`/finanzas/fci/${serie}/ultimo`, ultimo)

  retornar verdadero
}
