importar { format, subDays, addDays, isBefore as esAntes } desde 'date-fns'
importar { escribirRuta } desde '@/utils/rutas.esjs'
importar { guardarRendimientos } desde '@/finanzas/rendimientos/guardarRendimientos.esjs'
importar { extraerBuenbit } desde '@/finanzas/rendimientos/extraerBuenbit.esjs'
importar { extraerFiwind } desde '@/finanzas/rendimientos/extraerFiwind.esjs'
importar { extraerLetsbit } desde '@/finanzas/rendimientos/extraerLetsbit.esjs'
importar { extraerBelo } desde '@/finanzas/rendimientos/extraerBelo.esjs'
importar { extraerLemoncash } desde '@/finanzas/rendimientos/extraerLemoncash.esjs'
importar { extraerRipio } desde '@/finanzas/rendimientos/extraerRipio.esjs'

exportar porDefecto asincrono funcion () {
  const entidades = {
    buenbit: esperar extraerBuenbit(),
    fiwind: esperar extraerFiwind(),
    letsbit: esperar extraerLetsbit(),
    belo: esperar extraerBelo(),
    lemoncash: esperar extraerLemoncash(),
    ripio: esperar extraerRipio(),
  }

  para (const [entidad, rendimientos] de Object.entradas(entidades)) {
    esperar guardarRendimientos(entidad, rendimientos)
  }

  esperar escribirRuta(
    '/finanzas/rendimientos',
    Object.entradas(entidades).mapear(([entidad, rendimientos]) => ({
      entidad,
      rendimientos,
    })),
  )

  retornar verdadero
}
