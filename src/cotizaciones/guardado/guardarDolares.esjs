importar { escribirRuta, existeRuta, leerRuta } desde '@/utils/rutas.esjs'
importar { format, isSameDay, analizar } desde 'date-fns'
importar { collect } desde 'collect.js'

exportar asincrono funcion guardarDolares(dolares, fecha) {
  const fechaConBarra = format(fecha, 'yyyy/MM/dd')

  const existe = esperar existeRuta(`/cotizaciones/dolares/${fechaConBarra}`)

  const hoy = crear Fecha()

  const esHoy = isSameDay(fecha, hoy)

  si (existe && !esHoy) {
    retornar
  }

  escribirRuta(`/cotizaciones/dolares/${fechaConBarra}`, dolares)

  dolares.mapear((dolar) => {
    escribirRuta(`/cotizaciones/dolares/${dolar.casa}/${fechaConBarra}`, dolar)
  })

  collect(dolares)
    .groupBy('casa')
    .mapear((dolares) => {
      guardarHistoricoPorCasa(dolares.first().casa, dolares.toArray(), fecha)
    })

  guardarHistorico(dolares, fecha)
}

funcion guardarHistoricoPorCasa(casa, dolares, fecha) {
  const actual = leerRuta(`/cotizaciones/dolares/${casa}`)

  const actualSinItemsConMismaFecha = actual.filtrar((item) => {
    const esMismaFecha = isSameDay(
      fecha,
      analizar(item.fecha, 'yyyy-MM-dd', crear Fecha()),
    )

    retornar !esMismaFecha
  })

  const nuevo = [...actualSinItemsConMismaFecha, ...dolares]

  escribirRuta(`/cotizaciones/dolares/${casa}`, nuevo)
}

funcion guardarHistorico(dolares, fecha) {
  const actual = leerRuta(`/cotizaciones/dolares`)

  const actualSinItemsConMismaFecha = actual.filtrar((item) => {
    const esMismaFecha = isSameDay(
      fecha,
      analizar(item.fecha, 'yyyy-MM-dd', crear Fecha()),
    )

    retornar !esMismaFecha
  })

  const nuevo = [...actualSinItemsConMismaFecha, ...dolares]

  escribirRuta(`/cotizaciones/dolares`, nuevo)
}
